{"version":3,"sources":["components/Header.js","components/Footer.js","components/Card.js","components/CardContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","score","bestScore","id","type","name","onClick","toggleEnglish","Footer","href","Card","useState","picked","setPicked","reset","e","handleClick","data-key","card","thai","showenglish","month","CardContainer","cards","setCard","setReset","gameOver","newArray","shuffleCards","addScore","array","i","length","j","Math","floor","random","temp","map","App","setScore","setbestScore","setShowenglish","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05f49e3d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  const toggleEnglish = () => {\n    props.toggleEnglish();\n  };\n  return (\n    <div className='header'>\n      <div className='logo'>Thai Months Memory Game</div>\n      <div className='score-box'>\n        <div>Score: {props.score}</div>\n        <div>Best Score: {props.bestScore}</div>\n        <div id='toggle'>\n          <label>Hide English:</label>\n\n          <input\n            type='checkbox'\n            name='hideEnglish'\n            id=''\n            onClick={toggleEnglish}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className='footer'>\n      <div className='explainer'>\n        <p>\n          Created as part of the{' '}\n          <a href='https://www.theodinproject.com/paths/full-stack-ruby-on-rails/courses/javascript/lessons/memory-card'>\n            The Odin Project\n          </a>{' '}\n          by <a href='https://github.com/Jamesredux'>James Redux</a>.{' '}\n          <a href='https://github.com/Jamesredux/memory-card'>View Code</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\n\nconst Card = (props) => {\n  const [picked, setPicked] = useState(false);\n\n  const resetPicked = () => {\n    if (picked === true) {\n      setPicked(false);\n    }\n  };\n\n  if (props.reset === true) {\n    resetPicked();\n  }\n\n  const updateCard = (e) => {\n    picked ? props.handleClick(true) : props.handleClick(false);\n\n    setPicked(true);\n  };\n\n  return (\n    <button className='card-box' onClick={updateCard} data-key={props.card.id}>\n      <div className='thai-month'>{props.card.thai}</div>\n      {props.showenglish && <div>{props.card.month}</div>}\n    </button>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport Card from './Card';\n\nconst CardContainer = (props) => {\n  const [cards, setCard] = useState([\n    {\n      id: 1,\n      month: 'January',\n      thai: 'มกราคม',\n    },\n    {\n      id: 2,\n      month: 'February',\n      thai: 'กุมภาพันธ์',\n    },\n    {\n      id: 3,\n      month: 'March',\n      thai: 'มีนาคม',\n    },\n    {\n      id: 4,\n      month: 'April',\n      thai: 'เมษายน',\n    },\n    {\n      id: 5,\n      month: 'May',\n      thai: 'พฤษภาคม',\n    },\n    {\n      id: 6,\n      month: 'June',\n      thai: 'มิถุนายน',\n    },\n    {\n      id: 7,\n      month: 'July',\n      thai: 'กรกฎาคม',\n    },\n    {\n      id: 8,\n      month: 'August',\n      thai: 'สิงหาคม',\n    },\n    {\n      id: 9,\n      month: 'September',\n      thai: 'กันยายน',\n    },\n    {\n      id: 10,\n      month: 'October',\n      thai: 'ตุลาคม',\n    },\n    {\n      id: 11,\n      month: 'November',\n      thai: 'พฤศจิกายน',\n    },\n    {\n      id: 12,\n      month: 'December',\n      thai: 'ธันวาคม',\n    },\n  ]);\n  const [reset, setReset] = useState(false);\n\n  const handleClick = (gameOver) => {\n    setReset(false);\n    const newArray = shuffleCards(cards);\n    if (gameOver === true) {\n      setCard((cards) => [...newArray]);\n      setReset(true);\n      props.gameOver();\n    } else {\n      props.addScore();\n      setCard((cards) => [...newArray]);\n    }\n  };\n\n  const shuffleCards = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  return (\n    <div>\n      <div className='card-wrapper'>\n        {cards.map(function (card) {\n          return (\n            <div key={card.id}>\n              <Card\n                handleClick={handleClick}\n                card={card}\n                reset={reset}\n                showenglish={props.showenglish}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CardContainer;\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport CardContainer from './components/CardContainer';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [bestScore, setbestScore] = useState(0);\n  const [showenglish, setShowenglish] = useState(true);\n\n  const addScore = () => {\n    setScore(score + 1);\n  };\n\n  const endGame = () => {\n    setScore(0);\n  };\n\n  const toggleEnglish = () => {\n    setShowenglish(!showenglish);\n  };\n\n  useEffect(() => {\n    if (score > bestScore) {\n      setbestScore(score);\n    }\n  }, [score, bestScore]);\n\n  return (\n    <div className='App'>\n      <Header\n        score={score}\n        bestScore={bestScore}\n        toggleEnglish={toggleEnglish}\n      />\n      <CardContainer\n        gameOver={endGame}\n        addScore={addScore}\n        score={score}\n        showenglish={showenglish}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}